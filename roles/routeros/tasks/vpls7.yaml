#
# RouterOS 7 VPLS tunnel-builder 
#
- name: vpls_config
  tags: vpls
  include_vars: vars/routeros_tunnel.yaml


#
# Un-deploy tasks
#
- name: vpls_remove_spoke
  tags: vpls
  routeros_command:
    commands:
      - /interface/bridge/port remove [find interface={{ item.end_intf }}]
      - /interface/vpls remove [find name=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface/bridge remove [find name=br-{{ item.service_id }}]
  loop: "{{ ros_tunnel }}"
  when: 
    - item.type == "vpls"
    - item.state == "absent"
    - item.end_node == inventory_hostname


# un-deploy on hub l2t
- name: vpls_remove_hub_l2t
  tags: vpls
  routeros_command:
    commands:
      - /interface/bridge/port remove [find interface=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface/vpls remove [find name=vpls-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l2t"
    - item.type == "vpls"
    - item.state == "absent"
    - item.hub_node == inventory_hostname


# un-deploy on hub l3t
- name: vpls_remove_hub_l3t
  tags: vpls
  routeros_command:
    commands:
      - /ip/address remove [find interface=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface/list/member remove [find interface=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface/vpls remove [find name=vpls-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l3t"
    - item.type == "vpls"
    - item.state == "absent"
    - item.hub_node == inventory_hostname


#
# Deploy tasks
#
- name: vpls_deploy_spoke
  tags: vpls
  routeros_command:
    commands:
      - /interface/bridge add name=br-{{ item.service_id }} arp=disabled protocol=none \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface/vpls add name=vpls-{{ item.service_id }}-{{ item.tun_id }} \
        peer={{ lookup('dig', item.hub_node) }} \
        vpls-id={{ item.service_id }}:{{ item.tun_id }} \
        {{ vpls7_options }} \
        bridge=br-{{ item.service_id }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface/bridge/port add bridge=br-{{ item.service_id }} interface={{ item.end_intf }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "vpls"
    - item.state == "new"
    - item.end_node == inventory_hostname


# deploy on hub bridge
- name: vpls_deploy_hub_br
  tags: vpls
  routeros_command:
    commands:
      - /interface/vpls add name=vpls-{{ item.service_id }}-{{ item.tun_id }} {{ vpls7_options }} \
        peer={{ lookup('dig', item.end_node) }} \
        vpls-id={{ item.service_id }}:{{ item.tun_id }} \
        bridge=br-{{ item.service_id }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "br"
    - item.type == "vpls"
    - item.state == "new"
    - item.hub_node == inventory_hostname

# deploy on hub vrf
- name: vpls_deploy_hub_vrf
  tags: vpls
  routeros_command:
    commands:
      - /interface/vpls add name=vpls-{{ item.service_id }}-{{ item.tun_id }} {{ vpls7_options }} \
        peer={{ lookup('dig', item.end_node) }} \
        vpls-id={{ item.service_id }}:{{ item.tun_id }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface/list/member add list=vrf{{ item.service_id }} interface=vpls-{{ item.service_id }}-{{ item.tun_id }}
      - /ip/address add address={{ item.hub_address }} interface=vpls-{{ item.service_id }}-{{ item.tun_id }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "vrf"
    - item.type == "vpls"
    - item.state == "new"
    - item.hub_node == inventory_hostname




