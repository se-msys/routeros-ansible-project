#
# RouterOS EoIP Active/Passive tunnel-builder 
#
- name: eoip_config
  tags: eoip
  include_vars: vars/routeros_tunnel.yaml


#
# *** Un-deploy tasks ***
#
- name: eoip_remove_spoke
  tags: eoip
  routeros_command:
    commands:
      - /interface bridge port remove [find interface={{ item.end_intf }}]
      - /interface bridge port remove [find interface=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface eoip remove [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface bridge remove [find name=br-{{ item.service_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "eoip_ap"
    - item.state == "absent"
    - item.end_node == inventory_hostname


# un-deploy on hub L2T
- name: eoip_remove_hub_l2t
  tags: eoip
  routeros_command:
    commands:
      - /interface bridge port remove [find interface=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface eoip remove [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l2t"
    - item.type == "eoip_ap"
    - item.state == "absent"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)


# un-deploy on hub L2T
- name: eoip_remove_hub_l2br
  tags: eoip
  routeros_command:
    commands:
      - /interface bridge port remove [find interface=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface bridge vlan remove [find vlan-ids={{ item.hub_vlan }}]
      - /interface eoip remove [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l2br"
    - item.type == "eoip_ap"
    - item.state == "absent"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)


# un-deploy on hub L3T
- name: eoip_remove_hub_l3t
  tags: eoip
  routeros_command:
    commands:
      - /ip address remove [find interface=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface list member remove [find interface=eoip-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface eoip remove [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l3t"
    - item.type == "eoip_ap"
    - item.state == "absent"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)


#
# *** Deploy tasks ***
#
- name: eoip_deploy_spoke
  tags: eoip
  routeros_command:
    commands:
      - /interface bridge add name=br-{{ item.service_id }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface eoip add name=eoip-{{ item.service_id }}-{{ item.tun_id }} \
        local-address={{ lookup('dig', item.end_node) }} \
        remote-address={{ item.hub_source }} \
        tunnel-id={{ item.service_id }}{{ item.tun_id }} {{ eoip_options }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface bridge port add bridge=br-{{ item.service_id }} interface=eoip-{{ item.service_id }}-{{ item.tun_id }}
      - /interface bridge port add bridge=br-{{ item.service_id }} interface={{ item.end_intf }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "eoip_ap"
    - item.state == "present"
    - item.end_node == inventory_hostname


# deploy on hub L2BR
- name: eoip_deploy_hub_l2t
  tags: eoip
  routeros_command:
    commands:
      - /interface eoip add name=eoip-{{ item.service_id }}-{{ item.tun_id }} \
        local-address={{ item.hub_source }} disabled=yes \
        remote-address={{ lookup('dig', item.end_node) }} \
        tunnel-id={{ item.service_id }}{{ item.tun_id }} {{ eoip_options }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface bridge port add bridge=br-{{ item.service_id }} interface=eoip-{{ item.service_id }}-{{ item.tun_id }} 
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l2t"
    - item.type == "eoip_ap"
    - item.state == "present"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)


# deploy on hub L2BR
- name: eoip_deploy_hub_l2br
  tags: eoip
  routeros_command:
    commands:
      - /interface eoip add name=eoip-{{ item.service_id }}-{{ item.tun_id }} \
        local-address={{ item.hub_source }} disabled=yes \
        remote-address={{ lookup('dig', item.end_node) }} \
        tunnel-id={{ item.service_id }}{{ item.tun_id }} {{ eoip_options }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface bridge vlan add bridge={{ common_bridge }} vlan-ids={{ item.hub_vlan }} tagged={{ common_bridge_trunk }} untagged=eoip-{{ item.service_id }}-{{ item.tun_id }}
      - /interface bridge port add bridge={{ common_bridge }} pvid={{ item.hub_vlan }} interface=eoip-{{ item.service_id }}-{{ item.tun_id }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l2br"
    - item.type == "eoip_ap"
    - item.state == "present"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)



# deploy on hub L3T
- name: eoip_deploy_hub_l3t
  tags: eoip
  routeros_command:
    commands:
      - /interface eoip add name=eoip-{{ item.service_id }}-{{ item.tun_id }} \
        local-address={{ item.hub_source }} disabled=yes \
        remote-address={{ lookup('dig', item.end_node) }} \
        tunnel-id={{ item.service_id }}{{ item.tun_id }} {{ eoip_options }} \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface list member add list=vrf-{{ item.service_id }} interface=eoip-{{ item.service_id }}-{{ item.tun_id }}
      - /ip address add address={{ item.hub_address }} interface=eoip-{{ item.service_id }}-{{ item.tun_id }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "l3t"
    - item.type == "eoip_ap"
    - item.state == "present"
    - (item.hub_primary == inventory_hostname or item.hub_backup == inventory_hostname)



#
# set active/passive state
#
- name: eoip_hub_primary_state
  tags: eoip
  routeros_command:
    commands:
      - /interface eoip set [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}] disabled=no
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "eoip_ap"
    - item.state == "present"
    - item.hub_primary == inventory_hostname

- name: eoip_hub_backup_state
  tags: eoip
  routeros_command:
    commands:
      - /interface eoip set [find name=eoip-{{ item.service_id }}-{{ item.tun_id }}] disabled=yes
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "eoip_ap"
    - item.state == "present"
    - item.hub_backup == inventory_hostname





