#
# RouterOS VXLAN tunnel-builder
# Tasks for manage E-tree services
#
- name: vxlan_config
  tags: etree
  include_vars: vars/routeros_vxlan_etree.yaml



# remove on spoke
- name: vxlan_spoke_remove
  tags: etree
  routeros_command:
    commands:
      - /interface/bridge/vlan remove [find bridge={{ item.bridge|default('vxbridge') }} vlan-ids={{ item.vni }}]
      - /interface/bridge/port remove [find bridge={{ item.bridge|default('vxbridge') }} interface=vxlan{{ item.vni }}]
      - /interface/bridge/port remove [find bridge={{ item.bridge|default('vxbridge') }} pvid={{ item.vni }}]
      - /interface/vxlan/vteps remove [find name=vxlan{{ item.vni }}]
      - /interface/vxlan remove [find name=vxlan{{ item.vni }}]
  loop: "{{ ros_vxlan_etree }}"
  when:
    - item.state == "absent"
    - item.spoke == inventory_hostname


# remove spoke on hubs
- name: vxlan_hub_remove_spoke
  tags: etree
  routeros_command:
    commands:
      - /interface/vxlan/vteps remove [find name=vxlan{{ item.vni }} remote-ip={{ lookup('dig', item.spoke) }}]
  loop: "{{ ros_vxlan_etree }}"
  when:
    - item.state == "absent"
    - (vxlan_hub_a == inventory_hostname or vxlan_hub_b == inventory_hostname)





# deploy on spoke
- name: vxlan_spoke_deploy
  tags: etree
  routeros_command:
    commands:
      - /interface/bridge add name={{ item.bridge|default('vxbridge') }} {{ vxlan_bridge_options }}
      - /interface/vxlan add name=vxlan{{ item.vni }} {{ vxlan_options }} \
          vni={{ item.vni }} local-address={{ lookup('dig', item.spoke) }} \
          comment="{{ item.comment }}"
      - /interface/vxlan/vteps add interface=vxlan{{ item.vni }} \
          remote-ip={{ lookup('dig', vxlan_hub_a) }} {{ vxlan_vtep_options }}
      - /interface/vxlan/vteps add interface=vxlan{{ item.vni }} \
          remote-ip={{ lookup('dig', vxlan_hub_b) }} {{ vxlan_vtep_options }}
      - /interface/bridge/port add bridge={{ item.bridge|default('vxbridge') }} \
          interface=vxlan{{ item.vni }} pvid={{ item.bridge_vlan }}
      - /interface/bridge/port add bridge={{ item.bridge|default('vxbridge') }} \
          interface={{ item.spoke_interface }} pvid={{ item.bridge_vlan }} edge=yes
      - /interface/bridge/vlan add bridge={{ item.bridge|default('vxbridge') }} \
          untagged=vxlan{{ item.vni }},{{ item.spoke_interface }} vlan-ids={{ item.bridge_vlan }}
  loop: "{{ ros_vxlan_etree }}"
  when:
    - item.state == "create"
    - item.spoke == inventory_hostname


# deploy spoke on hubs
- name: vxlan_hub_add_spoke
  tags: etree
  routeros_command:
    commands:
      - /interface/vxlan/vteps add interface=vxlan{{ item.vni }} \
        remote-ip={{ lookup('dig', item.spoke) }} \
        comment="{{ item.spoke }};{{ item.comment }}"
  loop: "{{ ros_vxlan_etree }}"
  when:
    - item.state == "create"
    - (vxlan_hub_a == inventory_hostname or vxlan_hub_b == inventory_hostname)






