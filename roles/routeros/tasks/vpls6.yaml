#
# RouterOS VPLS 6 tunnel-builder 
#
- name: vpls_config
  tags:
    - vpls
  include_vars: vars/routeros_tunnel.yaml


#
# un-deploy tasks
#
- name: vpls_remove_spoke
  tags:
    - vpls
  routeros_command:
    commands:
      - /interface bridge port remove [find interface={{ item.end_intf }}]
      - /interface bridge port remove [find interface=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface vpls remove [find name=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface bridge remove [find name=br-{{ item.service_id }}]
  loop: "{{ ros_tunnel }}"
  when: 
    - item.type == "vpls"
    - item.state == "absent"
    - item.end_node == inventory_hostname


# un-deploy on hub bridge
- name: vpls_remove_hub_br
  tags:
    - vpls
  routeros_command:
    commands:
      - /interface bridge port remove [find interface=vpls-{{ item.service_id }}-{{ item.tun_id }}]
      - /interface vpls remove [find name=vpls-{{ item.service_id }}-{{ item.tun_id }}]
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "br"
    - item.type == "vpls"
    - item.state == "absent"
    - item.hub_node == inventory_hostname



#
# deploy tasks
#
- name: vpls_deploy_spoke
  tags:
    - vpls
  routeros_command:
    commands:
      - /interface bridge add name=br-{{ item.service_id }} arp=disabled protocol=none \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface vpls add name=vpls-{{ item.service_id }}-{{ item.tun_id }} \
        remote-peer={{ lookup('dig', item.hub_node) }} \
        vpls-id={{ item.service_id }}:{{ item.tun_id }} \
        l2mtu={{ vpls_l2mtu }} advertised-l2mtu={{ vpls_l2mtu }} disabled=no \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface bridge port add bridge=br-{{ item.service_id }} interface=vpls-{{ item.service_id }}-{{ item.tun_id }}
      - /interface bridge port add bridge=br-{{ item.service_id }} interface={{ item.end_intf }}
  loop: "{{ ros_tunnel }}"
  when:
    - item.type == "vpls"
    - item.state == "present"
    - item.end_node == inventory_hostname


# deploy on hub bridge
- name: vpls_deploy_hub_br
  tags:
    - vpls
  routeros_command:
    commands:
      - /interface vpls add name=vpls-{{ item.service_id }}-{{ item.tun_id }} \
        remote-peer={{ lookup('dig', item.end_node) }} \
        vpls-id={{ item.service_id }}:{{ item.tun_id }} \
        l2mtu={{ vpls_l2mtu }} advertised-l2mtu={{ vpls_l2mtu }} pw-control-word=default disabled=no \
        comment="{{ item.service_type }};{{ item.service_id }};{{ item.tun_id }};{{ item.comment }}"
      - /interface bridge port add bridge=br-{{ item.service_id }} interface=vpls-{{ item.service_id }}-{{ item.tun_id }} 
  loop: "{{ ros_tunnel }}"
  when:
    - item.service_type == "br"
    - item.type == "vpls"
    - item.state == "present"
    - item.hub_node == inventory_hostname





